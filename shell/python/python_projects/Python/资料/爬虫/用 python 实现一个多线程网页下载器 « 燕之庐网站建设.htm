<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0042)http://www.yanzhilu.com/blog/archives/4139 -->
<HTML lang=zh-CN dir=ltr xmlns="http://www.w3.org/1999/xhtml"><HEAD 
profile=http://gmpg.org/xfn/11><TITLE>用 python 实现一个多线程网页下载器 « 燕之庐网站建设</TITLE>
<META http-equiv=Content-Type content="text/html; charset=UTF-8">
<STYLE type=text/css media=screen>@import url( http://www.yanzhilu.com/blog/wp-content/themes/gravel/style.css );
.post {
	FONT: 16px/1.4em Georgia, serif
}
#commentlist {
	FONT: 14px/1.3em Georgia, serif
}
</STYLE>
<LINK title="RSS 2.0" href="http://www.yanzhilu.com/blog/feed" 
type=application/rss+xml rel=alternate><LINK title="RSS .92" 
href="http://www.yanzhilu.com/blog/feed/rss" type=text/xml rel=alternate><LINK 
title="Atom 1.0" href="http://www.yanzhilu.com/blog/feed/atom" 
type=application/atom+xml rel=alternate><LINK 
href="http://www.yanzhilu.com/blog/wp-content/themes/gravel/favicon_1.ico" 
rel="shortcut icon"><LINK href="http://www.yanzhilu.com/blog/xmlrpc.php" 
rel=pingback><LINK title=2010年5月 
href="http://www.yanzhilu.com/blog/archives/date/2010/05" rel=archives><LINK 
title=2010年4月 href="http://www.yanzhilu.com/blog/archives/date/2010/04" 
rel=archives><LINK title=2010年3月 
href="http://www.yanzhilu.com/blog/archives/date/2010/03" rel=archives><LINK 
title=2010年2月 href="http://www.yanzhilu.com/blog/archives/date/2010/02" 
rel=archives><LINK title=2010年1月 
href="http://www.yanzhilu.com/blog/archives/date/2010/01" rel=archives><LINK 
title=2009年12月 href="http://www.yanzhilu.com/blog/archives/date/2009/12" 
rel=archives><LINK title=2009年11月 
href="http://www.yanzhilu.com/blog/archives/date/2009/11" rel=archives><LINK 
title=2009年10月 href="http://www.yanzhilu.com/blog/archives/date/2009/10" 
rel=archives><LINK title=2009年9月 
href="http://www.yanzhilu.com/blog/archives/date/2009/09" rel=archives><LINK 
title="燕之庐网站建设 » 用 python 实现一个多线程网页下载器 评论 Feed" 
href="http://www.yanzhilu.com/blog/archives/4139/feed" type=application/rss+xml 
rel=alternate><LINK title=RSD href="http://www.yanzhilu.com/blog/xmlrpc.php?rsd" 
type=application/rsd+xml rel=EditURI><LINK 
href="http://www.yanzhilu.com/blog/wp-includes/wlwmanifest.xml" 
type=application/wlwmanifest+xml rel=wlwmanifest><LINK title=燕之庐网站建设 
href="http://www.yanzhilu.com/blog" rel=index><LINK 
title=ThinkPhp的URL设计和SEO支持-模块和操作 href="http://www.yanzhilu.com/blog/archives/3" 
rel=start><LINK title=手动制作python的exe可执行程序 
href="http://www.yanzhilu.com/blog/archives/4136" rel=prev><LINK 
title="[Python]循环语句中的 else 子句" href="http://www.yanzhilu.com/blog/archives/4142" 
rel=next>
<META content="MSHTML 6.00.2900.2180" name=GENERATOR>
<STYLE type=text/css>.recentcomments A {
	PADDING-RIGHT: 0px! important; DISPLAY: inline! important; PADDING-LEFT: 0px! important; PADDING-BOTTOM: 0px! important; MARGIN: 0px; PADDING-TOP: 0px! important
}
</STYLE>
</HEAD>
<BODY>
<DIV class=header-container>
<DIV class=header>
<DIV class=rss-container><A class=rss title="使用 RSS 同步本网站" 
href="http://www.yanzhilu.com/blog/feed">RSS</A> <A class=rss_comments 
title="全部文章中最新评论的 RSS" href="http://www.yanzhilu.com/blog/comments/feed">评论 
<ABBR title="Really Simple Syndication">RSS</ABBR></A> </DIV>
<H1 id=header><A href="http://www.yanzhilu.com/blog/">燕之庐网站建设</A><SPAN> - 
优质网站设计公司</SPAN> </H1>
<DIV class=menu>
<UL>
  <LI><A href="http://www.yanzhilu.com/blog">Home</A>
  <LI class="page_item page-item-2"><A title=关于 
  href="http://www.yanzhilu.com/blog/about">关于</A></LI></UL></DIV></DIV></DIV>
<DIV class=rap>
<DIV class=content id=content>
<H3 class=category><A title="查看 网站建设 的全部文章" 
href="http://www.yanzhilu.com/blog/archives/category/web" 
rel="category tag">网站建设</A></H3>
<DIV class=post id=post-4139><SMALL class=date>2010/03/12</SMALL> 
<H1 class=storytitle><A href="http://www.yanzhilu.com/blog/archives/4139" 
rel=bookmark>用 python 实现一个多线程网页下载器</A></H1>
<P class=tags>Tags: <A href="http://www.yanzhilu.com/blog/archives/tag/python" 
rel=tag>python</A></P>
<DIV class=storycontent>
<P>很久没有更新博客了，今天上来分享一下昨天实现的一个多线程网页下载器。</P>
<P>这是一个有着真实需求的实现，我的用途是拿它来通过 HTTP 方式向服务器提交游戏数据。把它放上来也是想大家帮忙挑刺，找找 bug，让它工作得更好。</P>
<P>keywords:python,http,multi-threads,thread,threading,httplib,urllib,urllib2,Queue,http 
pool,httppool</P>
<P>废话少说，上源码：</P>
<DIV>
<DIV>
<DIV><A onclick="dp.sh.Toolbar.Command('ViewSource',this);return false;" 
href="http://blog.csdn.net/lanphaday/archive/2009/04/16/4083852.aspx#">view 
plain</A><A 
onclick="dp.sh.Toolbar.Command('CopyToClipboard',this);return false;" 
href="http://blog.csdn.net/lanphaday/archive/2009/04/16/4083852.aspx#">copy to 
clipboard</A><A 
onclick="dp.sh.Toolbar.Command('PrintSource',this);return false;" 
href="http://blog.csdn.net/lanphaday/archive/2009/04/16/4083852.aspx#">print</A><A 
onclick="dp.sh.Toolbar.Command('About',this);return false;" 
href="http://blog.csdn.net/lanphaday/archive/2009/04/16/4083852.aspx#">?</A></DIV></DIV>
<OL>
  <LI><SPAN><SPAN>#&nbsp;-*-&nbsp;coding:utf-8&nbsp;-*-</SPAN><SPAN> 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>import</SPAN><SPAN> urllib,&nbsp;httplib </SPAN></SPAN>
  <LI><SPAN><SPAN>import</SPAN><SPAN> thread </SPAN></SPAN>
  <LI><SPAN><SPAN>import</SPAN><SPAN> time </SPAN></SPAN>
  <LI><SPAN><SPAN>from</SPAN><SPAN> Queue </SPAN><SPAN>import</SPAN><SPAN> 
  Queue,&nbsp;Empty,&nbsp;Full </SPAN></SPAN>
  <LI><SPAN>HEADERS&nbsp;=&nbsp;{<SPAN>“Content-type”</SPAN><SPAN>: 
  </SPAN><SPAN>“application/x-www-form-urlencoded”</SPAN><SPAN>, </SPAN></SPAN>
  <LI><SPAN><SPAN>‘Accept-Language’</SPAN><SPAN>:</SPAN><SPAN>‘zh-cn’</SPAN><SPAN>, 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>‘User-Agent’</SPAN><SPAN>: 
  </SPAN><SPAN>‘Mozilla/4.0&nbsp;(compatible;&nbsp;MSIE&nbsp;6.0;Windows&nbsp;NT&nbsp;5.0)’</SPAN><SPAN>, 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>“Accept”</SPAN><SPAN>: </SPAN><SPAN>“text/plain”</SPAN><SPAN>} 
  </SPAN></SPAN>
  <LI><SPAN>UNEXPECTED_ERROR&nbsp;=&nbsp;-<SPAN>1</SPAN><SPAN> </SPAN></SPAN>
  <LI><SPAN>POST&nbsp;=&nbsp;<SPAN>‘POST’</SPAN><SPAN> </SPAN></SPAN>
  <LI><SPAN>GET&nbsp;=&nbsp;<SPAN>‘GET’</SPAN><SPAN> </SPAN></SPAN>
  <LI><SPAN><SPAN>def</SPAN><SPAN> base_log(msg): </SPAN></SPAN>
  <LI><SPAN><SPAN>print</SPAN><SPAN> msg </SPAN></SPAN>
  <LI><SPAN><SPAN>def</SPAN><SPAN> base_fail_op(task,&nbsp;status,&nbsp;log): 
  </SPAN></SPAN>
  <LI><SPAN>log(<SPAN>‘fail&nbsp;op.&nbsp;task&nbsp;=&nbsp;%s,&nbsp;status&nbsp;=&nbsp;%d’</SPAN><SPAN>%(str(task),&nbsp;status)) 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>def</SPAN><SPAN> 
  get_remote_data(tasks,&nbsp;results,&nbsp;fail_op&nbsp;=&nbsp;base_fail_op,&nbsp;log&nbsp;=&nbsp;base_log): 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>while</SPAN><SPAN> </SPAN><SPAN>True</SPAN><SPAN>: 
  </SPAN></SPAN>
  <LI><SPAN>task&nbsp;=&nbsp;tasks.get() </SPAN>
  <LI><SPAN><SPAN>try</SPAN><SPAN>: </SPAN></SPAN>
  <LI><SPAN>tid&nbsp;=&nbsp;task[<SPAN>'id'</SPAN><SPAN>] </SPAN></SPAN>
  <LI><SPAN>hpt&nbsp;=&nbsp;task[<SPAN>'conn_args'</SPAN><SPAN>] 
  </SPAN><SPAN>#&nbsp;hpt&nbsp;&lt;=&nbsp;host:port,&nbsp;timeout</SPAN><SPAN> 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>except</SPAN><SPAN> KeyError,&nbsp;e: </SPAN></SPAN>
  <LI><SPAN>log(str(e)) </SPAN>
  <LI><SPAN><SPAN>continue</SPAN><SPAN> </SPAN></SPAN>
  <LI><SPAN>log(<SPAN>‘thread_%s&nbsp;doing&nbsp;task&nbsp;%d’</SPAN><SPAN>%(thread.get_ident(),&nbsp;tid)) 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>#log(’hpt&nbsp;=&nbsp;’&nbsp;+&nbsp;str(hpt))</SPAN><SPAN> 
  </SPAN></SPAN>
  <LI><SPAN>conn&nbsp;=&nbsp;httplib.HTTPConnection(**hpt) </SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN><SPAN>try</SPAN><SPAN>: </SPAN></SPAN>
  <LI><SPAN>params&nbsp;=&nbsp;task[<SPAN>'params'</SPAN><SPAN>] </SPAN></SPAN>
  <LI><SPAN><SPAN>except</SPAN><SPAN> KeyError,&nbsp;e: </SPAN></SPAN>
  <LI><SPAN>params&nbsp;=&nbsp;{} </SPAN>
  <LI><SPAN>params&nbsp;=&nbsp;urllib.urlencode(params) </SPAN>
  <LI><SPAN><SPAN>#log(’params&nbsp;=&nbsp;’&nbsp;+&nbsp;params)</SPAN><SPAN> 
  </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN><SPAN>try</SPAN><SPAN>: </SPAN></SPAN>
  <LI><SPAN>method&nbsp;=&nbsp;task[<SPAN>'method'</SPAN><SPAN>] </SPAN></SPAN>
  <LI><SPAN><SPAN>except</SPAN><SPAN> KeyError: </SPAN></SPAN>
  <LI><SPAN>method&nbsp;=&nbsp;<SPAN>‘GET’</SPAN><SPAN> </SPAN></SPAN>
  <LI><SPAN><SPAN>#log(’method&nbsp;=&nbsp;’&nbsp;+&nbsp;method)</SPAN><SPAN> 
  </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN><SPAN>try</SPAN><SPAN>: </SPAN></SPAN>
  <LI><SPAN>url&nbsp;=&nbsp;task[<SPAN>'url'</SPAN><SPAN>] </SPAN></SPAN>
  <LI><SPAN><SPAN>except</SPAN><SPAN> KeyError: </SPAN></SPAN>
  <LI><SPAN>url&nbsp;=&nbsp;<SPAN>‘/’</SPAN><SPAN> </SPAN></SPAN>
  <LI><SPAN><SPAN>#log(’url&nbsp;=&nbsp;’&nbsp;+&nbsp;url)</SPAN><SPAN> 
  </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN>headers&nbsp;=&nbsp;HEADERS </SPAN>
  <LI><SPAN><SPAN>try</SPAN><SPAN>: </SPAN></SPAN>
  <LI><SPAN>tmp&nbsp;=&nbsp;task[<SPAN>'headers'</SPAN><SPAN>] </SPAN></SPAN>
  <LI><SPAN><SPAN>except</SPAN><SPAN> KeyError,&nbsp;e: </SPAN></SPAN>
  <LI><SPAN>tmp&nbsp;=&nbsp;{} </SPAN>
  <LI><SPAN>headers.update(tmp) </SPAN>
  <LI><SPAN><SPAN>#log(’headers&nbsp;=&nbsp;’&nbsp;+&nbsp;str(headers))</SPAN><SPAN> 
  </SPAN></SPAN>
  <LI><SPAN>headers[<SPAN>'Content-Length'</SPAN><SPAN>]&nbsp;=&nbsp;len(params) 
  </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN><SPAN>try</SPAN><SPAN>: </SPAN></SPAN>
  <LI><SPAN><SPAN>if</SPAN><SPAN> method&nbsp;==&nbsp;POST: </SPAN></SPAN>
  <LI><SPAN>conn.request(method,&nbsp;url,&nbsp;params,&nbsp;headers) </SPAN>
  <LI><SPAN><SPAN>else</SPAN><SPAN>: </SPAN></SPAN>
  <LI><SPAN>conn.request(method,&nbsp;url&nbsp;+&nbsp;params) </SPAN>
  <LI><SPAN>response&nbsp;=&nbsp;conn.getresponse() </SPAN>
  <LI><SPAN><SPAN>except</SPAN><SPAN> Exception,&nbsp;e: </SPAN></SPAN>
  <LI><SPAN>log(<SPAN>‘request&nbsp;failed.&nbsp;method&nbsp;=&nbsp;%s,&nbsp;url&nbsp;=&nbsp;%s,&nbsp;params&nbsp;=&nbsp;%s&nbsp;headers&nbsp;=&nbsp;%s’</SPAN><SPAN>%( 
  </SPAN></SPAN>
  <LI><SPAN>method,&nbsp;url,&nbsp;params,&nbsp;headers)) </SPAN>
  <LI><SPAN>log(str(e)) </SPAN>
  <LI><SPAN>fail_op(task,&nbsp;UNEXPECTED_ERROR,&nbsp;log) </SPAN>
  <LI><SPAN><SPAN>continue</SPAN><SPAN> </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN><SPAN>if</SPAN><SPAN> response.status&nbsp;!=&nbsp;httplib.OK: 
  </SPAN></SPAN>
  <LI><SPAN>fail_op(task,&nbsp;response.status,&nbsp;log) </SPAN>
  <LI><SPAN><SPAN>continue</SPAN><SPAN> </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN>data&nbsp;=&nbsp;response.read() </SPAN>
  <LI><SPAN>results.put((tid,&nbsp;data),&nbsp;<SPAN>True</SPAN><SPAN>) 
  </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN><SPAN>class</SPAN><SPAN> HttpPool(object): </SPAN></SPAN>
  <LI><SPAN><SPAN>def</SPAN><SPAN> 
  __init__(</SPAN><SPAN>self</SPAN><SPAN>,&nbsp;threads_count,&nbsp;fail_op,&nbsp;log): 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>self</SPAN><SPAN>._tasks&nbsp;=&nbsp;Queue() </SPAN></SPAN>
  <LI><SPAN><SPAN>self</SPAN><SPAN>._results&nbsp;=&nbsp;Queue() </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN><SPAN>for</SPAN><SPAN> i </SPAN><SPAN>in</SPAN><SPAN> 
  xrange(threads_count): </SPAN></SPAN>
  <LI><SPAN>thread.start_new_thread(get_remote_data, </SPAN>
  <LI><SPAN>(<SPAN>self</SPAN><SPAN>._tasks, 
  </SPAN><SPAN>self</SPAN><SPAN>._results,&nbsp;fail_op,&nbsp;log)) 
  </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN><SPAN>def</SPAN><SPAN> 
  add_task(</SPAN><SPAN>self</SPAN><SPAN>,&nbsp;tid,&nbsp;host,&nbsp;url,&nbsp;params,&nbsp;headers&nbsp;=&nbsp;{},&nbsp;method&nbsp;= 
  </SPAN><SPAN>‘GET’</SPAN><SPAN>,&nbsp;timeout&nbsp;= 
  </SPAN><SPAN>None</SPAN><SPAN>): </SPAN></SPAN>
  <LI><SPAN>task&nbsp;=&nbsp;{ </SPAN>
  <LI><SPAN><SPAN>‘id’</SPAN><SPAN> :&nbsp;tid, </SPAN></SPAN>
  <LI><SPAN><SPAN>‘conn_args’</SPAN><SPAN> 
  :&nbsp;{</SPAN><SPAN>‘host’</SPAN><SPAN> :&nbsp;host} 
  </SPAN><SPAN>if</SPAN><SPAN> timeout </SPAN><SPAN>is</SPAN><SPAN> 
  </SPAN><SPAN>None</SPAN><SPAN> </SPAN><SPAN>else</SPAN><SPAN> 
  {</SPAN><SPAN>‘host’</SPAN><SPAN> :&nbsp;host, 
  </SPAN><SPAN>‘timeout’</SPAN><SPAN> :&nbsp;timeout}, </SPAN></SPAN>
  <LI><SPAN><SPAN>‘headers’</SPAN><SPAN> :&nbsp;headers, </SPAN></SPAN>
  <LI><SPAN><SPAN>‘url’</SPAN><SPAN> :&nbsp;url, </SPAN></SPAN>
  <LI><SPAN><SPAN>‘params’</SPAN><SPAN> :&nbsp;params, </SPAN></SPAN>
  <LI><SPAN><SPAN>‘method’</SPAN><SPAN> :&nbsp;method, </SPAN></SPAN>
  <LI><SPAN>} </SPAN>
  <LI><SPAN><SPAN>try</SPAN><SPAN>: </SPAN></SPAN>
  <LI><SPAN><SPAN>self</SPAN><SPAN>._tasks.put_nowait(task) </SPAN></SPAN>
  <LI><SPAN><SPAN>except</SPAN><SPAN> Full: </SPAN></SPAN>
  <LI><SPAN><SPAN>return</SPAN><SPAN> </SPAN><SPAN>False</SPAN><SPAN> 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>return</SPAN><SPAN> </SPAN><SPAN>True</SPAN><SPAN> 
  </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN><SPAN>def</SPAN><SPAN> get_results(</SPAN><SPAN>self</SPAN><SPAN>): 
  </SPAN></SPAN>
  <LI><SPAN>results&nbsp;=&nbsp;[] </SPAN>
  <LI><SPAN><SPAN>while</SPAN><SPAN> </SPAN><SPAN>True</SPAN><SPAN>: 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>try</SPAN><SPAN>: </SPAN></SPAN>
  <LI><SPAN>res&nbsp;=&nbsp;<SPAN>self</SPAN><SPAN>._results.get_nowait() 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>except</SPAN><SPAN> Empty: </SPAN></SPAN>
  <LI><SPAN><SPAN>break</SPAN><SPAN> </SPAN></SPAN>
  <LI><SPAN>results.append(res) </SPAN>
  <LI><SPAN><SPAN>return</SPAN><SPAN> results </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN><SPAN>def</SPAN><SPAN> test_google(task_count,&nbsp;threads_count): 
  </SPAN></SPAN>
  <LI><SPAN>hp&nbsp;=&nbsp;HttpPool(threads_count,&nbsp;base_fail_op,&nbsp;base_log) 
  </SPAN>
  <LI><SPAN><SPAN>for</SPAN><SPAN> i </SPAN><SPAN>in</SPAN><SPAN> 
  xrange(task_count): </SPAN></SPAN>
  <LI><SPAN><SPAN>if</SPAN><SPAN> hp.add_task(i, </SPAN></SPAN>
  <LI><SPAN><SPAN>‘www.google.cn’</SPAN><SPAN>, </SPAN></SPAN>
  <LI><SPAN><SPAN>‘/search?’</SPAN><SPAN>, </SPAN></SPAN>
  <LI><SPAN>{<SPAN>‘q’</SPAN><SPAN> : </SPAN><SPAN>‘lai’</SPAN><SPAN>}, 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method&nbsp;=&nbsp;’POST’</SPAN><SPAN> 
  </SPAN></SPAN>
  <LI><SPAN>): </SPAN>
  <LI><SPAN><SPAN>print</SPAN><SPAN> 
  </SPAN><SPAN>‘add&nbsp;task&nbsp;successed.’</SPAN><SPAN> </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN><SPAN>while</SPAN><SPAN> </SPAN><SPAN>True</SPAN><SPAN>: 
  </SPAN></SPAN>
  <LI><SPAN>results&nbsp;=&nbsp;hp.get_results() </SPAN>
  <LI><SPAN><SPAN>if</SPAN><SPAN> </SPAN><SPAN>not</SPAN><SPAN> results: 
  </SPAN></SPAN>
  <LI><SPAN>time.sleep(<SPAN>1.0</SPAN><SPAN> *&nbsp;random.random()) 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>for</SPAN><SPAN> i </SPAN><SPAN>in</SPAN><SPAN> results: 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>print</SPAN><SPAN> 
  i[</SPAN><SPAN>0</SPAN><SPAN>],&nbsp;len(i[</SPAN><SPAN>1</SPAN><SPAN>]) 
  </SPAN></SPAN>
  <LI><SPAN><SPAN>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;unicode(i[1],&nbsp;’gb18030′)</SPAN><SPAN> 
  </SPAN></SPAN>
  <LI><SPAN></SPAN>
  <LI><SPAN><SPAN>if</SPAN><SPAN> __name__&nbsp;== 
  </SPAN><SPAN>‘__main__’</SPAN><SPAN>: </SPAN></SPAN>
  <LI><SPAN><SPAN>import</SPAN><SPAN> sys,&nbsp;random </SPAN></SPAN>
  <LI><SPAN>task_count,&nbsp;threads_count&nbsp;=&nbsp;int(sys.argv[<SPAN>1</SPAN><SPAN>]),&nbsp;int(sys.argv[</SPAN><SPAN>2</SPAN><SPAN>]) 
  </SPAN></SPAN>
  <LI><SPAN>test_google(task_count,&nbsp;threads_count) </SPAN></LI></OL></DIV>
<P><TEXTAREA style="DISPLAY: none" name=code rows=15 cols=50>#  -*- coding:utf-8 -*- import urllib, httplib import thread import time from Queue import Queue, Empty, Full HEADERS = {”Content-type”: “application/x-www-form-urlencoded”, 						‘Accept-Language’:'zh-cn’, 						‘User-Agent’: ‘Mozilla/4.0 (compatible; MSIE 6.0;Windows NT 5.0)’, 						“Accept”: “text/plain”} UNEXPECTED_ERROR = -1 POST = ‘POST’ GET = ‘GET’ def base_log(msg): 	print msg def base_fail_op(task, status, log): 	log(’fail op. task = %s, status = %d’%(str(task), status)) def get_remote_data(tasks, results, fail_op = base_fail_op, log =  base_log): 	while True: 		task = tasks.get() 		try: 			tid = task['id'] 			hpt = task['conn_args'] # hpt &lt;= host:port, timeout 		except KeyError, e: 			log(str(e)) 			continue 		log(’thread_%s doing task %d’%(thread.get_ident(), tid)) 		#log(’hpt = ‘ + str(hpt)) 		conn = httplib.HTTPConnection(**hpt) 			 		try: 			params = task['params'] 		except KeyError, e: 			params = {} 		params = urllib.urlencode(params) 		#log(’params = ‘ + params) 		 		try: 			method = task['method'] 		except KeyError: 			method = ‘GET’ 		#log(’method = ‘ + method) 		 		try: 			url = task['url'] 		except KeyError: 			url = ‘/’ 		#log(’url = ‘ + url) 		 		headers = HEADERS 		try: 			tmp = task['headers'] 		except KeyError, e: 			tmp = {} 		headers.update(tmp) 		#log(’headers = ‘ + str(headers)) 		headers['Content-Length'] = len(params) 		 		try: 			if method == POST: 				conn.request(method, url, params, headers) 			else: 				conn.request(method, url + params) 			response = conn.getresponse() 		except Exception, e: 			log(’request failed. method = %s, url = %s, params = %s headers =  %s’%( 						method, url, params, headers)) 			log(str(e)) 			fail_op(task, UNEXPECTED_ERROR, log) 			continue 			 		if response.status != httplib.OK: 			fail_op(task, response.status, log) 			continue 			 		data = response.read() 		results.put((tid, data), True) 		 class HttpPool(object): 	def __init__(self, threads_count, fail_op, log): 		self._tasks = Queue() 		self._results = Queue() 		 		for i in xrange(threads_count): 			thread.start_new_thread(get_remote_data,  															(self._tasks, self._results, fail_op, log)) 			 	def add_task(self, tid, host, url, params, headers = {}, method =  ‘GET’, timeout = None): 		task = { 			‘id’ : tid, 			‘conn_args’ : {’host’ : host} if timeout is None else {’host’ : host,  ‘timeout’ : timeout}, 			‘headers’ : headers, 			‘url’ : url, 			‘params’ : params, 			‘method’ : method, 			} 		try: 			self._tasks.put_nowait(task) 		except Full: 			return False 		return True 		 	def get_results(self): 		results = [] 		while True: 			try: 				res = self._results.get_nowait() 			except Empty: 				break 			results.append(res) 		return results 		 def test_google(task_count, threads_count): 	hp = HttpPool(threads_count, base_fail_op, base_log) 	for i in xrange(task_count): 		if hp.add_task(i, 				‘www.google.cn’, 				‘/search?’, 				{’q’ : ‘lai’}, #				method = ‘POST’ 				): 			print ‘add task successed.’ 			 	while True: 		results = hp.get_results() 		if not results: 			time.sleep(1.0 * random.random()) 		for i in results: 			print i[0], len(i[1]) #			print unicode(i[1], ‘gb18030′) 			 if __name__ == ‘__main__’: 	import sys, random 	task_count, threads_count = int(sys.argv[1]), int(sys.argv[2]) 	test_google(task_count, threads_count)</TEXTAREA></P>
<P>有兴趣想尝试运行的朋友，可以把它保存为 xxxx.py，然后执行 python xxxx.py 10 4，其中 10 表示向 google.cn 请求 
10 次查询，4 表示由 4 条线程来执行这些任务。</P>
<P><A title=网站建设 href="http://www.yanzhilu.com/index.html">网站建设</A></P></DIV>
<DIV class=feedback><A href="http://www.yanzhilu.com/blog/archives/4139#respond" 
rel=bookmark>评论 (0)</A> </DIV></DIV>
<H2 id=postcomment>请您留下评论</H2>
<P class=comment-trackback><A 
href="http://www.yanzhilu.com/blog/archives/4139/feed">本文评论的 <ABBR 
title="Really Simple Syndication">RSS</ABBR> feed。</A> <A 
href="http://www.yanzhilu.com/blog/archives/4139/trackback" 
rel=trackback>引用消息（Trackback） <ABBR title=统一资源定位符>URL</ABBR></A> </P>
<FORM id=commentform action=http://www.yanzhilu.com/blog/wp-comments-post.php 
method=post>
<P><INPUT class=text id=author tabIndex=1 size=22 name=author> <LABEL 
for=author>名称 (必填)</LABEL></P>
<P><INPUT class=text id=email tabIndex=2 size=22 name=email> <LABEL 
for=email>电子信箱 (不会发布) (必填)</LABEL></P>
<P><INPUT class=text id=url tabIndex=3 size=22 name=url> <LABEL 
for=url>网站</LABEL></P>
<P><TEXTAREA id=comment tabIndex=4 name=comment rows=10 cols=100></TEXTAREA></P>
<P><INPUT id=submit tabIndex=5 type=submit value=提交评论 name=submit> <INPUT 
type=hidden value=4139 name=comment_post_ID> </P></FORM>
<P class=nav_link></P></DIV><!-- begin sidebar -->
<DIV class=sidebar>
<UL>
  <LI class="widget widget_search" id=search-3>
  <H2>搜索框</H2>
  <FORM id=searchform action=http://www.yanzhilu.com/blog/ method=get 
  role="search">
  <DIV><LABEL class=screen-reader-text for=s>搜索：</LABEL> <INPUT id=s name=s> <INPUT id=searchsubmit type=submit value=搜索> </DIV></FORM>
  <LI class="widget widget_calendar" id=calendar-3>
  <H2>按日显示</H2>
  <DIV id=calendar_wrap>
  <TABLE id=wp-calendar summary=日历>
    <CAPTION>2010年5月</CAPTION>
    <THEAD>
    <TR>
      <TH title=星期一 scope=col abbr=星期一>一</TH>
      <TH title=星期二 scope=col abbr=星期二>二</TH>
      <TH title=星期三 scope=col abbr=星期三>三</TH>
      <TH title=星期四 scope=col abbr=星期四>四</TH>
      <TH title=星期五 scope=col abbr=星期五>五</TH>
      <TH title=星期六 scope=col abbr=星期六>六</TH>
      <TH title=星期日 scope=col abbr=星期日>日</TH></TR></THEAD>
    <TFOOT>
    <TR>
      <TD id=prev abbr=4月 colSpan=3><A title="查看 4月 2010 的文章" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/04">« 4</A></TD>
      <TD class=pad>&nbsp;</TD>
      <TD class=pad id=next colSpan=3>&nbsp;</TD></TR></TFOOT>
    <TBODY>
    <TR>
      <TD class=pad colSpan=5>&nbsp;</TD>
      <TD><A 
        title="HTML5:究竟是实至名归还是言过其实？&#10;Ubuntu的设置工具 Ubuntu Tweak 0.5.4正式发布&#10;Linux急救引导系统光盘grml 2010.04发布&#10;php编写大型网站问题集&#10;Ubuntu10.04发布 将在中国建完整团队" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/01">1</A></TD>
      <TD>2</TD></TR>
    <TR>
      <TD><A title="Ubuntu 配置 SVN 服务器&#10;linux脚本编写基础之珍藏" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/03">3</A></TD>
      <TD><A 
        title="IPv6论坛主席：IPv4地址仅剩4000万&#10;IPv6催生 IPv4黑市 威胁互联网公司生存&#10;票务在线B轮融资内幕：SIG出手过亿 盛大落选&#10;Facebook Docs或成为小企业协作工具&#10;乔布斯不喜欢 Flash真正原因：PC消亡与云计算&#10;歌华有线拟出资 2000万元进军电视购物业务&#10;新热播剧起纠纷：多家版权方炮轰土豆优酷侵权&#10;李彦宏寄语青年人：你应该拥有阳光下的成功&#10;开源开发者被授予骑士爵位&#10;Zend Framework 1.10.4 发布&#10;Nestful：简单的Ruby HTTP/REST 客户端库&#10;CakePHP 1.3 版本正式发布！&#10;JavaScript中的对象动态加载技术" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/04">4</A></TD>
      <TD>5</TD>
      <TD><A 
        title="百度PC版中文输入法正在内测 可在线使用&#10;网游业高ARPU 值难以为继 试水交易收费&#10;用友金蝶轮番并购：虎豹象决战后危机时代&#10;团购网站 Groupon收购移动开发公司Mob.ly&#10;网页游戏再遇资本扎堆押注 竞争门槛大幅提升&#10;面板巨头涉垄断国外遭罚 中国无人出头索赔&#10;联通否认5月17 日将推出Wi-Fi版iPhone&#10;广电23亿资产置入武汉塑料开启湖北三网融合&#10;最新Chrome 5跑分数据支持HTML5&#10;Mahout、Nutch等成为Apache顶级项目&#10;Google进行第8次改版修改标志及显示方式&#10;IE9预览:性能提升、硬件加速、Acid3&#10;H.264超Flash份额达66%,成第一网络视频格式&#10;360称飓风木马暴力劫持搜索引擎 百度变搜狗" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/06">6</A></TD>
      <TD>7</TD>
      <TD><A 
        title="nginx平台上运行PHP将会变得非常轻松&#10;谷歌纵横拥有300万活跃用户 将开发地点登陆组件&#10;嵌入式行业整合成风 Linux成发展焦点&#10;数字图书馆吹响开源集结号&#10;东软刘积仁：中国软件业机会巨大&#10;HTML4.01与 HTML5 之间的差异&#10;谷歌图片搜索创始人加盟腾讯搜搜" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/08">8</A></TD>
      <TD><A 
        title="Twitter展示最新注释功能(图)&#10;陈天桥眼花缭乱一盘棋：迪斯尼之梦尚未成真&#10;华谊上市效应刺激民营影视急奔上市路" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/09">9</A></TD></TR>
    <TR>
      <TD><A title=消息称开心网将上线14款应用 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/10">10</A></TD>
      <TD><A title="从IE9预览版看IE对Web标准支持傲视群雄&#10;HTML5与CSS3是互联网发展趋势" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/11">11</A></TD>
      <TD><A 
        title="百度近日即将开放sitemap&#10;CSS之父维姆莱批评Flash:HTML5好得多&#10;甲骨文再次向用户保证做好Sun磁带存储业务&#10;超级网银不做第三方支付平台&#10;网吧频遭微软大棒:开源操作系统或成救世主&#10;谷歌否认抢注baidu.com.sb域名" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/12">12</A></TD>
      <TD>13</TD>
      <TD><A title="谷歌 Android高级软件工程师跳槽LinkedIn" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/14">14</A></TD>
      <TD><A 
        title="三雄逐鹿企业级Linux市场 沉浮谁主&#10;美考虑对网络攻击做出军事反应&#10;CentOS 5.5 发布&#10;Google愿意保留中国业务-施密特再次重申" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/15">15</A></TD>
      <TD>16</TD></TR>
    <TR>
      <TD><A 
        title="Facebook与Zynga之争非只为虚拟货币&#10;存储前沿:开源重复数据删除技术崭露头角&#10;告诉你为什么HTML5比Flash更好&#10;IE6像陈年牛奶 督促用户应尽早放弃" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/17">17</A></TD>
      <TD><A 
        title="谷歌掘金非洲互联网：尚未设定收入目标&#10;互联网地图新标准出台 手机地图首次纳入管理&#10;《IDC行业资讯大全（2011版）》开启收录&#10;云计算的烦恼：Amazon云计算一周故障四次&#10;华为称愿向印度政府公布网络系统源代码&#10;战胜 Flash ，HTML5 还需要什么？" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/18">18</A></TD>
      <TD><A 
        title="IIS构建高安全性web服务器&#10;Linux基金会:希望中国企业加入共同促进Linux发展&#10;甲骨文是绝对不会放弃Java这块大蛋糕的&#10;分析Twitter由于自行开发程序与开发者之间的关系&#10;云计算的烦恼：Amazon云计算一周竟然发生四次故障&#10;张亚勤:我不做CEO 但我的仍然喜欢做研发&#10;开发人员一定要牢记的HTML 5安全问题&#10;用好SQL Server命令所需要的“三熟”&#10;想要战胜 Flash ，HTML5 还需要更新什么？&#10;微软CFO：不会收购SAP 对Sybase也不会有兴趣&#10;python采集程序&#10;开源社区灰狐动力和开源力量宣布合并&#10;一个for循环做的99乘法表&#10;W3C开始为HTML语言加入硬件操作功能" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/19">19</A></TD>
      <TD><A 
        title="Linux管理员们,该刷新内核了&#10;9个必须知道的实用PHP函数和功能&#10;关于PHP你可能不知道的10件事&#10;开发人员需要牢记的HTML5安全问题&#10;你可能不知道的17个关于 Facebook 的事实&#10;牟长青：在娱乐中完成工作 在工作中寻找兴趣" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/20">20</A></TD>
      <TD><A title=谷歌I/O开发者大会：“掌掴”苹果的11种方式 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/21">21</A></TD>
      <TD><A 
        title="分析：世界杯会是新媒体的春天吗&#10;敦煌网拟计划在成都建立电子商务代销中心&#10;移动支付掀起技术大战 三家运营商各不相同" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/22">22</A></TD>
      <TD><A title="传20家企业竞购软件公司Novell&#10;Python Web 框架Django 1.2 发布" 
        href="http://www.yanzhilu.com/blog/archives/date/2010/05/23">23</A></TD></TR>
    <TR>
      <TD>24</TD>
      <TD>25</TD>
      <TD>26</TD>
      <TD id=today>27</TD>
      <TD>28</TD>
      <TD>29</TD>
      <TD>30</TD></TR>
    <TR>
      <TD>31</TD>
      <TD class=pad colSpan=6>&nbsp;</TD></TR></TBODY></TABLE></DIV>
  <LI class="widget widget_recent_entries" id=recent-posts-3>
  <H2>最近更新</H2>
  <UL>
    <LI><A title="Python Web 框架Django 1.2 发布" 
    href="http://www.yanzhilu.com/blog/archives/4867">Python Web 框架Django 1.2 发布 
    </A>
    <LI><A title=传20家企业竞购软件公司Novell 
    href="http://www.yanzhilu.com/blog/archives/4864">传20家企业竞购软件公司Novell </A>
    <LI><A title="移动支付掀起技术大战 三家运营商各不相同" 
    href="http://www.yanzhilu.com/blog/archives/4862">移动支付掀起技术大战 三家运营商各不相同 </A>
    <LI><A title=敦煌网拟计划在成都建立电子商务代销中心 
    href="http://www.yanzhilu.com/blog/archives/4860">敦煌网拟计划在成都建立电子商务代销中心 </A>
    <LI><A title=分析：世界杯会是新媒体的春天吗 
    href="http://www.yanzhilu.com/blog/archives/4858">分析：世界杯会是新媒体的春天吗 </A>
    <LI><A title=谷歌I/O开发者大会：“掌掴”苹果的11种方式 
    href="http://www.yanzhilu.com/blog/archives/4856">谷歌I/O开发者大会：“掌掴”苹果的11种方式 
    </A></LI></UL>
  <LI class="widget widget_archive" id=archives-3>
  <H2>每月归档</H2><SELECT 
  onchange=document.location.href=this.options[this.selectedIndex].value; 
  name=archive-dropdown> <OPTION value="" selected>选择月份</OPTION> <OPTION 
    value=http://www.yanzhilu.com/blog/archives/date/2010/05>2010年5月 
    &nbsp;(94)</OPTION> <OPTION 
    value=http://www.yanzhilu.com/blog/archives/date/2010/04>2010年4月 
    &nbsp;(93)</OPTION> <OPTION 
    value=http://www.yanzhilu.com/blog/archives/date/2010/03>2010年3月 
    &nbsp;(176)</OPTION> <OPTION 
    value=http://www.yanzhilu.com/blog/archives/date/2010/02>2010年2月 
    &nbsp;(117)</OPTION> <OPTION 
    value=http://www.yanzhilu.com/blog/archives/date/2010/01>2010年1月 
    &nbsp;(374)</OPTION> <OPTION 
    value=http://www.yanzhilu.com/blog/archives/date/2009/12>2009年12月 
    &nbsp;(218)</OPTION> <OPTION 
    value=http://www.yanzhilu.com/blog/archives/date/2009/11>2009年11月 
    &nbsp;(367)</OPTION> <OPTION 
    value=http://www.yanzhilu.com/blog/archives/date/2009/10>2009年10月 
    &nbsp;(659)</OPTION> <OPTION 
    value=http://www.yanzhilu.com/blog/archives/date/2009/09>2009年9月 
    &nbsp;(125)</OPTION></SELECT> 
  <LI class="widget widget_recent_comments" id=recent-comments-3>
  <H2>最新评论</H2>
  <UL id=recentcomments>
    <LI class=recentcomments>序言 关于 <A 
    href="http://www.yanzhilu.com/blog/archives/2702/comment-page-1#comment-38">从射手QQ之争看开源许可证的选择</A> 
    的评论
    <LI class=recentcomments>huahualv 关于 <A 
    href="http://www.yanzhilu.com/blog/archives/2702/comment-page-1#comment-37">从射手QQ之争看开源许可证的选择</A> 
    的评论
    <LI class=recentcomments>来者不善 关于 <A 
    href="http://www.yanzhilu.com/blog/archives/2702/comment-page-1#comment-36">从射手QQ之争看开源许可证的选择</A> 
    的评论
    <LI class=recentcomments>柜员机 关于 <A 
    href="http://www.yanzhilu.com/blog/archives/2702/comment-page-1#comment-35">从射手QQ之争看开源许可证的选择</A> 
    的评论
    <LI class=recentcomments>同一个 关于 <A 
    href="http://www.yanzhilu.com/blog/archives/2702/comment-page-1#comment-34">从射手QQ之争看开源许可证的选择</A> 
    的评论
    <LI class=recentcomments>changboter 关于 <A 
    href="http://www.yanzhilu.com/blog/archives/266/comment-page-1#comment-10">thinkphp视图模型-视图和视图模型</A> 
    的评论</LI></UL>
  <LI class="widget widget_tag_cloud" id=tag_cloud-3>
  <H2>TAG</H2>
  <DIV><A class=tag-link-118 title="9 个主题" style="FONT-SIZE: 8.102pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/äºèç½" rel=tag>互联网</A> <A 
  class=tag-link-6 title="713 个主题" style="FONT-SIZE: 20.181pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/äº§ä¸æ°é»" rel=tag>产业新闻</A> 
  <A class=tag-link-8 title="44 个主题" style="FONT-SIZE: 8.703pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/kaiyuan" rel=tag>开源动态</A> <A 
  class=tag-link-41 title="8 个主题" style="FONT-SIZE: 8.085pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/å¾®è½¯" rel=tag>微软</A> <A 
  class=tag-link-10 title="693 个主题" style="FONT-SIZE: 19.838pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/ææ¯æç«&nbsp;" 
  rel=tag>技术文章</A> <A class=tag-link-62 title="6 个主题" style="FONT-SIZE: 8.051pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/æ&shy;£åè¡¨è¾¾å¼" 
  rel=tag>正则表达式</A> <A class=tag-link-60 title="4 个主题" 
  style="FONT-SIZE: 8.017pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/ç²éª¨æ" rel=tag>甲骨文</A> <A 
  class=tag-link-12 title="102 个主题" style="FONT-SIZE: 9.698pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/ç½ç«å»ºè®¾" rel=tag>网站建设</A> 
  <A class=tag-link-40 title="9 个主题" style="FONT-SIZE: 8.102pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/è°·æ&shy;" rel=tag>谷歌</A> <A 
  class=tag-link-19 title="7 个主题" style="FONT-SIZE: 8.068pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/é¢åå¯¹è±¡" rel=tag>面向对象</A> 
  <A class=tag-link-197 title="37 个主题" style="FONT-SIZE: 8.583pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/actionscript3" 
  rel=tag>actionscript3</A> <A class=tag-link-152 title="21 个主题" 
  style="FONT-SIZE: 8.308pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/ajax" rel=tag>ajax</A> <A 
  class=tag-link-13 title="20 个主题" style="FONT-SIZE: 8.291pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/apache" rel=tag>apache</A> <A 
  class=tag-link-65 title="5 个主题" style="FONT-SIZE: 8.034pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/cookie" rel=tag>cookie</A> <A 
  class=tag-link-28 title="3 个主题" style="FONT-SIZE: 8pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/css" rel=tag>css</A> <A 
  class=tag-link-29 title="6 个主题" style="FONT-SIZE: 8.051pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/discuz" rel=tag>discuz</A> <A 
  class=tag-link-39 title="4 个主题" style="FONT-SIZE: 8.017pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/google" rel=tag>google</A> <A 
  class=tag-link-115 title="4 个主题" style="FONT-SIZE: 8.017pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/html" rel=tag>html</A> <A 
  class=tag-link-37 title="3 个主题" style="FONT-SIZE: 8pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/ibm" rel=tag>IBM</A> <A 
  class=tag-link-74 title="8 个主题" style="FONT-SIZE: 8.085pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/java" rel=tag>java</A> <A 
  class=tag-link-83 title="5 个主题" style="FONT-SIZE: 8.034pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/javascript" 
  rel=tag>javascript</A> <A class=tag-link-195 title="12 个主题" 
  style="FONT-SIZE: 8.154pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/jquery" rel=tag>jquery</A> <A 
  class=tag-link-16 title="44 个主题" style="FONT-SIZE: 8.703pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/linux" rel=tag>linux</A> <A 
  class=tag-link-15 title="28 个主题" style="FONT-SIZE: 8.428pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/mysql" rel=tag>MYSQL</A> <A 
  class=tag-link-21 title="3 个主题" style="FONT-SIZE: 8pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/nginx" rel=tag>nginx</A> <A 
  class=tag-link-87 title="6 个主题" style="FONT-SIZE: 8.051pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/oop" rel=tag>oop</A> <A 
  class=tag-link-17 title="12 个主题" style="FONT-SIZE: 8.154pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/oracle" rel=tag>oracle</A> <A 
  class=tag-link-70 title="5 个主题" style="FONT-SIZE: 8.034pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/pear" rel=tag>pear</A> <A 
  class=tag-link-143 title="11 个主题" style="FONT-SIZE: 8.137pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/perl" rel=tag>perl</A> <A 
  class=tag-link-4 title="819 个主题" style="FONT-SIZE: 22pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/php" rel=tag>php</A> <A 
  class=tag-link-5 title="3 个主题" style="FONT-SIZE: 8pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/phpä¸ç" rel=tag>PHP业界</A> 
  <A class=tag-link-14 title="46 个主题" style="FONT-SIZE: 8.737pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/phpå&shy;¦ä¹&nbsp;" 
  rel=tag>PHP学习</A> <A class=tag-link-139 title="4 个主题" 
  style="FONT-SIZE: 8.017pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/php5" rel=tag>php5</A> <A 
  class=tag-link-201 title="16 个主题" style="FONT-SIZE: 8.223pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/postgresql" 
  rel=tag>postgreSQL</A> <A class=tag-link-200 title="199 个主题" 
  style="FONT-SIZE: 11.362pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/python" rel=tag>python</A> <A 
  class=tag-link-73 title="3 个主题" style="FONT-SIZE: 8pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/rss" rel=tag>rss</A> <A 
  class=tag-link-34 title="16 个主题" style="FONT-SIZE: 8.223pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/ruby" rel=tag>ruby</A> <A 
  class=tag-link-9 title="59 个主题" style="FONT-SIZE: 8.96pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/seo" rel=tag>seo</A> <A 
  class=tag-link-20 title="4 个主题" style="FONT-SIZE: 8.017pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/sun" rel=tag>sun</A> <A 
  class=tag-link-3 title="192 个主题" style="FONT-SIZE: 11.242pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/tp" rel=tag>ThinkPhp</A> <A 
  class=tag-link-26 title="4 个主题" style="FONT-SIZE: 8.017pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/twitter" rel=tag>Twitter</A> 
  <A class=tag-link-77 title="4 个主题" style="FONT-SIZE: 8.017pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/ubuntu" rel=tag>ubuntu</A> <A 
  class=tag-link-148 title="4 个主题" style="FONT-SIZE: 8.017pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/vml" rel=tag>vml</A> <A 
  class=tag-link-36 title="4 个主题" style="FONT-SIZE: 8.017pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/windows7" rel=tag>windows7</A> 
  <A class=tag-link-61 title="19 个主题" style="FONT-SIZE: 8.274pt" 
  href="http://www.yanzhilu.com/blog/archives/tag/xml" rel=tag>xml</A></DIV>
  <LI class="widget widget_links" id=linkcat-2>
  <H2>Blogroll</H2>
  <UL class="xoxo blogroll">
    <LI><A title=北京网站制作公司 href="http://www.yanzhilu.com/">北京网站制作公司</A> 
    <LI><A title=北京网站建设公司 href="http://www.yanzhilu.com/">北京网站建设公司</A> 
    <LI><A title=北京网站设计公司 href="http://www.yanzhilu.com/">北京网站设计公司</A> 
    <LI><A title=北京网站建设公司 href="http://www.yanzhilu.com/index.htm">燕之庐公司</A> 
    </LI></UL></LI></UL><!-- end sidebar --><!-- begin footer -->
<P class=footer><SMALL>Gravel 1.6 by <A 
href="http://www.noonnoo.com/category/my-free-wordpress-themes/gravel/">NOONnoo</A>. 
Powered by <A title="本站由顶级个人出版平台 WordPress中文版 驱动。" 
href="http://wordpress.org/">WordPress</A>. <A 
href="http://www.yanzhilu.com/blog/wp-login.php">登录</A>. <A 
href="http://www.yanzhilu.com/blog/wp-login.php?action=register">注册</A>. 
<BR></SMALL></P></DIV></DIV>
<DIV class=clear></DIV></BODY></HTML>
