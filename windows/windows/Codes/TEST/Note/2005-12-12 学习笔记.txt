C语言的extern声明

1.extern可以置于变量或者函数前，以标示变量或者函数的定义在别的文件中，提示编译器遇到此变量和函数时在其他模块中寻找其定义。
2.extern也可用来进行链接指定。


在使用extern时候要严格对应声明时的格式,反面示例 ：

在一个源文件里定义了一个数组：

	char a[6]; 

在另外一个文件里用下列语句进行了声明：

	extern char *a;

不可以这样声明，程序运行时会告诉你非法访问。原因 ：

	指向类型T的指针并不等价于类型T的数组。extern char *a声明的是一个指针变量而不是字符数组，因此与实际的定义不同，
    从而造成运行时非法访问。应该将声明改为extern char a[ ]。
	另外，如果a[] = "abcd",则外部变量a=0x61626364 (abcd的ASCII码值)，*a显然没有意义。a指向的空间（0x61626364）没有
    意义，易出现非法内存访问。

注意 ：在*.c文件中声明了一个全局的变量，这个全局的变量如果要被引用，就放在*.h中并用extern来声明。
 

