<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0063)http://41620935.blog.163.com/blog/static/498206420082185032531/ -->
<HTML xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客</TITLE>
<SCRIPT>
  		if(top!=window){top.location=location.href;}
  	
    	var ginit_time = new Date().getTime();
 		var gend_time = 0;
    </SCRIPT>

<META content=ZhengHangJie,41620935 name=Author>
<META 
content=[转]STL中的常用的vector，map，set，Sort用法,日志,41620935,ZhengHangJie,41620935,网易博客,网易,blog 
name=Keywords>
<META 
content='<div  ><div ><font size="3">C++的标准模板库（Standard Template Library，简称STL）是一个容器和算法的类库。容器往往包含同一类型的数据。STL中比较常用的容器是vector，set和map，比较常用的算法有Sort等。<br>&#13;&#10;.<br>&#13;&#10;一. vector<br>&#13;&#10;1.声明：<br>&#13;&#10;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  一个vector类似于一个动态的一维数组。<br>&#13;&#10;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  vector&amp;lt;int&amp;gt; a; //声明一个元素为int类型的vector a<br>&#13;&#10;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  vectot&amp;lt;MyType&amp;gt; a; //声明一个元素为MyType类型的vector a<br>&#13;&#10;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  这里的声明的a包含0个元素，既a.size()的值为0，但它是动态的，其大小会随着数据的插入</font></div>&#13;&#10;<div ></div></div>,ZhengHangJie的日志,Notebook,ZhengHangJie的网易博客' 
name=Description>
<META http-equiv=Content-Type content=text/html;charset=gbk><LINK 
href="http://b1.bst.126.net/1021000/style/common/favicon.ico" 
rel="shortcut icon">
<SCRIPT type=text/javascript>try{document.execCommand('BackgroundImageCache',false,true);}catch(e){}</SCRIPT>
<LINK 
href="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/00-htc.css" 
type=text/css rel=stylesheet><LINK 
href="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/core_1.css" 
type=text/css rel=stylesheet><LINK 
href="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/core_2.css" 
type=text/css rel=stylesheet>
<SCRIPT 
src="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/fixedThemeInit.js" 
type=text/javascript></SCRIPT>
<LINK id=_$$_link_layout 
href="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/o.css" 
type=text/css rel=stylesheet><LINK id=_$$_link_theme 
href="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/s.css" 
type=text/css rel=stylesheet>
<SCRIPT type=text/JavaScript>
<!--//--><![CDATA[//><!--
var UD = {
     status       : 'prev',
     themeId      :  4086,
     hostId       :  4982064,
     visitorId    :  0,
     visitorIP	  :  '219.133.0.1',
     visitorAvatar:	 '',
     hostPath     : '',
     hostName     : '41620935', 
     pageName     : 'prevBlogPerma',
     visitorRank  : '-100',
     visitorName  : '', 
     hostNickname : 'ZhengHangJie',
     visitorNickname : '',
     commentRank  : -100,
     invitedRank  : 0,
     externHash   : '',
     hasAdminCircles : 'false',
     hostImgUrl   : 'http://ava.bimg.126.net/photo/3-qcwvUEB4TLJQNsK1StGA==/187743809466398683.jpg',
     themeFileId  : '-1256203205164',
     serverName   : '41620935.blog.163.com',
     dataDigest	  : 'null',
     lastModifyTime : '',
     visitorUserType: [12,28,104],
     uuid			: '70305945-4540-4c49-890d-8a90fb2e3c10',
     speedTest		: 0,
     migStat		: 3,
     isAudit		: true
};   

if(UD.pageName == "prevHome" || UD.pageName == "editHome"){
	var date = new Date();
	date.setMinutes(0,0,0);
	UD.weatherGenTime = date.getTime();
}

//--><!]]>
</SCRIPT>

<SCRIPT 
src="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/core1.js" 
type=text/javascript></SCRIPT>

<SCRIPT 
src="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/core_ext.js" 
type=text/javascript></SCRIPT>

<SCRIPT 
src="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/core2.js" 
type=text/javascript></SCRIPT>

<SCRIPT 
src="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/core3.js" 
type=text/javascript></SCRIPT>

<SCRIPT 
src="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/interface.js" 
type=text/javascript></SCRIPT>

<SCRIPT 
src="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/interface_ext.js" 
type=text/javascript></SCRIPT>

<SCRIPT 
src="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/blog.js" 
type=text/javascript></SCRIPT>

<META content="MSHTML 6.00.2900.5848" name=GENERATOR></HEAD>
<BODY lang=zh id=blog-163-com>
<DIV id=tptlbr style="DISPLAY: none"></DIV>
<DIV class=bggb id=blog-163-com-body>
<DIV class=innerlayer id=_$$_inner_layer>
<DIV class=g_p_none><SPAN class=a_a></SPAN></DIV>
<SCRIPT language=JavaScript>
<!--//--><![CDATA[//><!--
 	if (NEBlog==undefined) 
		var NEBlog={};
	var selectedLayout =0;
	
	NEBlog.gPermalink_BlogCiters = [];
//--><!]]>
</SCRIPT>

<DIV class=g_p_none><!-- 单篇日志预览-内容 -->
<DIV class="g_c_container g_p_hide " id=_$$_blog_perma>
<DIV class="mdl_new " id=layoutType>
<DIV class=mdl_new_main>
<DIV class=mdl_new_mainc>
<DIV><!-- 单篇日志预览-菜单 -->
<DIV class="g_h_25 brd01" 
style="DISPLAY: block; PADDING-TOP: 6px; BORDER-BOTTOM: 1px dashed"><A 
class="g_p_block g_w_45 g_p_right g_t_right n_ n33c g_t_14 c05" id=newerBlogLink 
style="DISPLAY: none">
<P class="g_p_right g_w_95 g_t_hide g_c_hand g_t_12" 
id=newerBlogTitle></P></A><A 
class="g_p_block g_w_45 g_p_left g_t_left n_ n34 g_t_14 c05" id=olderBlogLink 
style="DISPLAY: none">
<P class="g_w_95 g_t_hide g_c_hand g_p_left g_t_12" id=olderBlogTitle></P></A>
<DIV class="g_p_clear g_t_space"></DIV></DIV>
<DIV class=mdl_new_diray>
<P class="g_p_center g_t_wrap g_t_left g_t_20 g_c_pdin c07" 
id=blogtitle_fks_084065085084080068083094086095080095089065084080082 
style="MARGIN: 20px auto 10px"><SPAN 
style="FONT-FAMILY: '微软雅黑','黑体',Arial,Helvetica,Sans-Serif">[转]STL中的常用的vector，map，set，Sort用法</SPAN></P>
<DIV class="g_p_center g_t_right g_c_pdin g_h_20 c08" 
style="MARGIN-BOTTOM: 15px">
<DIV class=g_p_left><A class=c05 
id=aBelongClsfks_084065085084080068083094086095080095089065084080082 
onclick="NEBlog.gPermaLinkPage.updownMenu.openSameClass('fks_081071081083083067085084074071093094083067082082', '编程笔记');" 
href="http://41620935.blog.163.com/blog/static/498206420082185032531/#">编程笔记</A> 
&nbsp;&nbsp;<SPAN class="g_t_12 c08">2008-03-18 17:00</SPAN> <SPAN 
class=c08>&nbsp;&nbsp;阅读<NOBR 
id=accessCount_fks_084065085084080068083094086095080095089065084080082>1698</NOBR>&nbsp;&nbsp;&nbsp;评论<NOBR 
id=comCount_fks_084065085084080068083094086095080095089065084080082>0</NOBR></SPAN> 
<SPAN class=c08>&nbsp;</SPAN> </DIV>
<DIV>字号： <A class="g_c_ul c05" id=bigfont style="FONT-SIZE: 12px" 
onclick="NEBlog.gPermaLinkPage.updownMenu.changeFont('blogtext_fks_084065085084080068083094086095080095089065084080082', 1);return false;" 
href="http://41620935.blog.163.com/blog/static/498206420082185032531/#">大</A><SPAN 
class="g_t_bold c07" id=bigfont_off style="DISPLAY: none">大</SPAN>&nbsp; <A 
class="g_c_ul c05" id=middlefont style="FONT-SIZE: 12px" 
onclick="NEBlog.gPermaLinkPage.updownMenu.changeFont('blogtext_fks_084065085084080068083094086095080095089065084080082', 2);return false;" 
href="http://41620935.blog.163.com/blog/static/498206420082185032531/#">中</A><SPAN 
class="g_t_bold c07" id=middlefont_off style="DISPLAY: none">中</SPAN>&nbsp; <A 
class="g_c_ul c05" id=smallfont style="DISPLAY: none; FONT-SIZE: 12px" 
onclick="NEBlog.gPermaLinkPage.updownMenu.changeFont('blogtext_fks_084065085084080068083094086095080095089065084080082', 3);return false;" 
href="http://41620935.blog.163.com/blog/static/498206420082185032531/#">小</A><SPAN 
class="g_t_bold c07" id=smallfont_off style="DISPLAY: inline">小</SPAN> 
</DIV></DIV>
<DIV class=g_blog_list>
<DIV class="g_t_center g_c_pdin g_p_center c07 content" 
id=blogtext_fks_084065085084080068083094086095080095089065084080082>
<DIV class=ns_content>
<DIV>
<DIV><FONT size=3>C++的标准模板库（Standard Template 
Library，简称STL）是一个容器和算法的类库。容器往往包含同一类型的数据。STL中比较常用的容器是vector，set和map，比较常用的算法有Sort等。<BR>.<BR>一. 
vector<BR>1.声明：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
一个vector类似于一个动态的一维数组。<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
vector&lt;int&gt; a; //声明一个元素为int类型的vector 
a<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vectot&lt;MyType&gt; 
a; //声明一个元素为MyType类型的vector 
a<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
这里的声明的a包含0个元素，既a.size()的值为0，但它是动态的，其大小会随着数据的插入</FONT></DIV>
<DIV><FONT size=3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
和删除改变而改变。<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
vector&lt;int&gt; a(100, 0); //这里声明的是一已经个存放了100个0的整数vector</FONT></DIV>
<DIV><FONT 
size=3>2.向量操作<BR>常用函数：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
size_t 
size();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
// 
返回vector的大小，即包含的元素个数<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
void pop_back();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 
删除vector末尾的元素，vector大小相应减一<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
void push_back();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
//用于在vector的末尾添加元素<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; T 
back();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
// 返回vector末尾的元素<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void 
clear();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
// 
将vector清空，vector大小变为0<BR>其他访问方式：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
cout&lt;&lt;a[5]&lt;&lt;endl;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
cout&lt;&lt;a.at(5)&lt;&lt;endl;<BR>以上区别在于后者在访问越界时会抛出异常，而前者不会。</FONT></DIV>
<DIV><FONT size=3>例:<BR>int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
intarray[10];&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
vector&lt;int&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
first_vector(intarray,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
intarray&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
10);&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
vector&lt;int&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
second_vector(first_vector.begin(),first_vector.end()); 
<BR>class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
man&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
public:&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
AnsiStirng&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
id;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
AnsiString&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
mc;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
vector&lt;man&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
manList;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
man&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
thisman;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
thisman.id="2001";&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
thisman.name="yourname";&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
manList.push_back&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
thisman;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
//加入第一个元素&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
thisman.id="2002";&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
thisman.name="myname";&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
manList.push_back&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
thisman;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
//加入第二个元素&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
manList.clear();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
//清空&nbsp;&nbsp;</FONT></DIV>
<DIV></DIV>
<DIV><FONT size=3>3.遍历</FONT></DIV>
<DIV><FONT size=3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
(1).&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(vector&lt;datatype&gt;::iterator 
it=a.begin(); it!=a.end();it++)</FONT></DIV>
<DIV><FONT 
size=3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
cout&lt;&lt;*it&lt;&lt;endl;</FONT></DIV>
<DIV><FONT size=3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
(2).&nbsp;&nbsp;&nbsp;&nbsp; for(int i=0;i&lt;a.size;i++)</FONT></DIV>
<DIV><FONT 
size=3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
cout&lt;&lt;a[i]&lt;&lt;endl;</FONT></DIV>
<DIV><FONT size=3>二. 
map<BR>Map是STL的一个关联容器，它提供一对一（其中第一个可以称为关键字，每个关键字只能在map中出现一次，第二个可能称为该关键字的值）的数据处理能力，由于这个特性<BR>map内部的实现自建一颗红黑树(一种非严格意义上的平衡二叉树)，这颗树具有对数据自动排序的功能。<BR>下面举例说明什么是一对一的数据映射。比如一个班级中，每个学生的学号跟他的姓名就存在着一一映射的关系，这个模型用map可能轻易描述，<BR>很明显学号用int描述，姓名用字符串描述(本篇文章中不用char 
*来描述字符串，而是采用STL中string来描述),<BR>下面给出map描述代码： </FONT>
<DIV><FONT size=3><BR></FONT><FONT 
size=3>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
声明方式：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Map&lt;int, string&gt; 
mapStudent;<BR>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
数据的插入<BR>在构造map容器后，我们就可以往里面插入数据了。这里讲三种插入数据的方法：<BR>第一种：用insert函数插入pair数据<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Map&lt;int, string&gt; 
mapStudent;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
mapStudent.insert(pair&lt;int, string&gt;(1, “student_one”));</FONT></DIV>
<DIV><FONT 
size=3>第二种：用insert函数插入value_type数据<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Map&lt;int, string&gt; 
mapStudent;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
mapStudent.insert(map&lt;int, string&gt;::value_type (1, 
“student_one”));<BR>第三种：用数组方式插入数据</FONT></DIV>
<DIV><FONT 
size=3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Map&lt;int, string&gt; 
mapStudent;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
mapStudent[1] =&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
“student_one”;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
mapStudent[2] = 
“student_two”;<BR>3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
map的大小<BR>在往map里面插入了数据，我们怎么知道当前已经插入了多少数据呢，可以用size函数：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Int nSize = 
mapStudent.size();<BR>4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
数据的遍历<BR>第一种：应用前向迭代器<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
map&lt;int, string&gt;::iterator 
iter;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
for(iter = mapStudent.begin(); iter != mapStudent.end(); 
iter++)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Cout&lt;&lt;iter-&gt;first&lt;&lt;”&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
”&lt;&lt;iter-&gt;second&lt;&lt;end;<BR>第二种：应用反相迭代器<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
map&lt;int, string&gt;::reverse_iterator 
iter;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
for(iter = mapStudent.rbegin(); iter != mapStudent.rend(); 
iter++)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Cout&lt;&lt;iter-&gt;first&lt;&lt;”&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
”&lt;&lt;iter-&gt;second&lt;&lt;end;<BR>第三种：用数组方式<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
int nSize = 
mapStudent.size()<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
for(int nIndex = 1; nIndex &lt;= nSize; nIndex++) 
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Cout&lt;&lt;mapStudent[nIndex]&lt;&lt;end;<BR>5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
数据的查找（包括判定这个关键字是否在map中出现）<BR>这里给出三种数据查找方法<BR>第一种：用count函数来判定关键字是否出现，但是无法定位数据出现位置<BR>第二种：用find函数来定位数据出现位置它返回的一个迭代器，<BR>当数据出现时，它返回数据所在位置的迭代器，如果map中没有要查找的数据，它返回的迭代器等于end函数返回的迭代器<BR>Int 
main()<BR>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Map&lt;int, string&gt; 
mapStudent;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
mapStudent.insert(pair&lt;int, string&gt;(1, 
“student_one”));<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
mapStudent.insert(pair&lt;int, string&gt;(2, 
“student_two”));<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
mapStudent.insert(pair&lt;int, string&gt;(3, 
“student_three”));<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
map&lt;int, string&gt;::iterator 
iter;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iter 
= 
mapStudent.find(1);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
if(iter != 
mapStudent.end())<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Cout&lt;&lt;”Find, the value is 
”&lt;&lt;iter-&gt;second&lt;&lt;endl;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Cout&lt;&lt;”Do not 
Find”&lt;&lt;endl;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}<BR>}<BR>第三种：这个方法用来判定数据是否出现<BR>Lower_bound函数用法，这个函数用来返回要查找关键字的下界(是一个迭代器)<BR>Upper_bound函数用法，这个函数用来返回要查找关键字的上界(是一个迭代器)<BR>例如：map中已经插入了1，2，3，4的话，如果lower_bound(2)的话，返回的2，而upper-bound（2）的话，返回的就是3<BR>Equal_range函数返回一个pair，pair里面第一个变量是Lower_bound返回的迭代器，pair里面第二个迭代器是Upper_bound返回的迭代器，如果这两个迭代器相等的话，则说明map中不出现这个关键字，程序说明<BR>mapPair 
= mapStudent.equal_range(2);<BR>if(mapPair.first == 
mapPair.second)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
cout&lt;&lt;”Do not 
Find”&lt;&lt;endl;<BR>6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
数据的清空与判空<BR>清空map中的数据可以用clear()函数，判定map中是否有数据可以用empty()函数，它返回true则说明是空map<BR>7.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
数据的删除<BR>这里要用到erase函数，它有三个重载了的函数<BR>迭代器删除 
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iter = 
mapStudent.find(1);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
mapStudent.erase(iter);<BR>用关键字删除<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Int n = 
mapStudent.erase(1);//如果删除了会返回1，否则返回0<BR>用迭代器，成片的删除<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
一下代码把整个map清空<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
mapStudent.earse(mapStudent.begin(), 
mapStudent.end());<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
//成片删除要注意的是，也是STL的特性，删除区间是一个前闭后开的集合<BR>8.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
其他一些函数用法<BR>这里有swap,key_comp,value_comp,get_allocator等函数，有兴趣的话可以自个研究</FONT></DIV></DIV>
<DIV><FONT size=3><BR></FONT><FONT size=3>三. 
set<BR>set是集合，set中不会包含重复的元素，这是和vector的区别。</FONT></DIV>
<DIV><FONT size=3>定义：<BR>定义一个元素为整数的集合a，可以用<BR>set&lt;int&gt; a;</FONT></DIV>
<DIV><FONT 
size=3>基本操作：<BR>对集合a中元素的有<BR>插入元素：a.insert(1);<BR>删除元素（如果存在）：a.erase(1);<BR>判断元素是否属于集合：if 
(a.find(1) != a.end()) 
...<BR>返回集合元素的个数：a.size()<BR>将集合清为空集：a.clear()<BR>集合的并，交和差<BR>set_union(a.begin(),a.end(),b.begin(),b.end(),insert_iterator&lt;set&lt;int&gt; 
&gt;(c,c.begin()));<BR>set_intersection(a.begin(),a.end(),b.begin(),b.end(),insert_iterator&lt;set&lt;int&gt; 
&gt;(c,c.begin()));<BR>set_difference(a.begin(),a.end(),b.begin(),b.end(),insert_iterator&lt;set&lt;int&gt; 
&gt;(c,c.begin()));<BR>（注意在此前要将c清为空集）。<BR>注意：<BR>很重要的一点，为了实现集合的快速运算，set的实现采用了平衡二叉树，因此，set中的元素必须是可排序的。如果是自定义的类型，那在定义类型的同时必须给出运算符&lt;的定义</FONT></DIV>
<DIV><FONT size=3>四.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Sort<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Sort顾名思义就是排序<BR>用法：<BR>单关键字：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
对于vector 
a来说<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Sort(&amp;a[0], &amp;a[N]); //N=a.size()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
将a中元素递增排序。<BR>多关键字：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
我们也可以利用类pair<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
vector&lt; pair&lt;int,int&gt; &gt; a; // 注意这里两个&gt; 
&gt;中间必须有一个空格，否则编译器会当是运算符&gt;&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
例如：<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
int N,x,y; </FONT>
<DIV><FONT 
size=3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
cin &gt;&gt; 
N;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
for(int i=0;i&lt;N;++i) 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
cin &gt;&gt; x &gt;&gt; 
y;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
a.push_back(make_pair(x,y)); // 
make_pair用于创建pair对象<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
sort(&amp;a[0], &amp;a[N]); </FONT></DIV>
<DIV><FONT size=3>注意：<BR>对于我们自己定义的类或结构，系统一般不能替我做比较运算，需要我们自己定义相应的运算符&lt;<BR>bool 
operator&lt;(const MyType &amp;x, const MyType 
&amp;y)<BR>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return true if 
x&lt;y, false if x&gt;=y<BR>}</FONT></DIV></DIV></DIV></DIV></DIV></DIV></DIV>
<DIV class="g_tab_btn00 bdb g_t_left" 
id=cssTabBar_fks_084065085084080068083094086095080095089065084080082>
<DIV class=bdl 
id=ShareDiv_fks_084065085084080068083094086095080095089065084080082><A class=c05 
onclick="NEBlog.gPermaLinkPage.updownMenu.upDownCities('fks_084065085084080068083094086095080095089065084080082','blog/498206420082185032531.track','blog/static/498206420082185032531');return false;" 
href="http://41620935.blog.163.com/blog/static/498206420082185032531/#">引用(<NOBR 
id=tbCount_fks_084065085084080068083094086095080095089065084080082>?</NOBR>)<SPAN 
class="n_ n32 g_p_none">&nbsp;</SPAN></A></DIV>
<DIV class=bdl 
id=RecommendDiv_fks_084065085084080068083094086095080095089065084080082><A 
class="c05 n_ n55" onclick="NEBlog.gPermaLinkPage.recommend();return false;" 
href="http://41620935.blog.163.com/blog/static/498206420082185032531/#">推荐(<NOBR 
id=recommendCount_fks_084065085084080068083094086095080095089065084080082>?</NOBR>)<SPAN 
class="n_ n32 g_p_none">&nbsp;</SPAN></A></DIV>
<DIV class="c08 bdl bdr">评论(<NOBR 
id=comCountMid_fks_084065085084080068083094086095080095089065084080082>?</NOBR>)</DIV>
<DIV class="c08 bdl bdr last">阅读(<NOBR 
id=accessCountMid_fks_084065085084080068083094086095080095089065084080082>?</NOBR>)</DIV><INPUT 
id=openCom_fks_084065085084080068083094086095080095089065084080082 type=hidden 
value=-1> <INPUT 
id=openShare_fks_084065085084080068083094086095080095089065084080082 type=hidden 
value=-1> </DIV>
<DIV class=g_t_left 
id=share_fks_084065085084080068083094086095080095089065084080082 
style="DISPLAY: none"></DIV>
<DIV id=com_fks_084065085084080068083094086095080095089065084080082><!-- 单篇日志预览-菜单 -->
<DIV class=ns_links>
<P class=c05><A class=c05 id=olderBlogLinkBottom style="DISPLAY: none">上一篇：<SPAN 
id=olderBlogTitleBottom>&nbsp;</SPAN></A> </P>
<DIV class="g_p_clear g_t_space"></DIV>
<P class=c05><A class=c05 id=newerBlogLinkBottom style="DISPLAY: none">下一篇：<SPAN 
id=newerBlogTitleBottom>&nbsp;</SPAN></A> </P></DIV>
<DIV 
id=blogReader_fks_084065085084080068083094086095080095089065084080082></DIV>
<DIV class="g_p_relative g_h_1" style="DISPLAY: block">
<DIV class="ns_mtt c08 brd01" 
id=ComDiv_fks_084065085084080068083094086095080095089065084080082>评论</DIV>
<DIV id=comPubContainer style="DISPLAY: none"></DIV>
<DIV class="g_h_1 cmt-all" 
id=comPub_fks_084065085084080068083094086095080095089065084080082></DIV>
<DIV class=cmt-all 
id=comShow_fks_084065085084080068083094086095080095089065084080082></DIV></DIV></DIV></DIV></DIV></DIV>
<DIV class="mdl_new_side brd01">
<DIV id=aboutMeBasic></DIV>
<DIV id=recentBlogs></DIV>
<DIV id=recentRecommendBlogs></DIV>
<DIV id=postsense></DIV></DIV>
<DIV class="g_p_clear g_t_space"></DIV></DIV></DIV></DIV><!-- 生成模块脚本 -->
<SCRIPT language=JavaScript>
	function initPage(){
    	var _$$_blog_perma = new netease.ui.module.Module("日志",null,$("_$$_blog_perma"),null,"",{parent:"_$$_module_container_center"});
	}
</SCRIPT>
</DIV>
<DIV class="wsy topbar" id=_$$_TopBar>
<DIV class="g_menu_llk sep"><SPAN id=sysmsgs style="DISPLAY: none">
<DIV class=g_hom_sys>
<DIV class=icn_arrow></DIV>
<DIV class=g_hom_sys_cnt id=sysmsgsContent></DIV><A class=a-close 
onclick="closeSysMsg();return false;">关闭</A> </DIV></SPAN>
<UL class="fl topbar2">
  <LI class=noline><A href="http://www.163.com/?frompersonalbloghome" 
  target=_blank>网易首页</A> </LI>
  <LI class=chose><A class=arrow id=$_topbarItmes 
  onclick=toggleBlogItems(event); href="javascript:void(0);">网易博客</A> 
  <OL class=ch-list id=blog_items style="DISPLAY: none" 
  onclick=stopBubble(event);>
    <LI><A href="http://blog.163.com/?frompersonalbloghome" 
    target=_blank>博客首页</A> </LI>
    <LI><A href="http://pp.blog.163.com/?frompersonalbloghome" 
    target=_blank>博客拍拍</A> </LI>
    <LI><A href="http://blog.163.com/public/theme/?frompersonalbloghome" 
    target=_blank>精美风格</A> </LI>
    <LI><A href="http://q.163.com/#home?frompersonalbloghome" 
    target=_blank>博客圈子</A> </LI>
    <LI><A href="http://huodong.163.com/?frompersonalbloghome" 
    target=_blank>博客活动</A> </LI>
    <LI><A href="http://my.163.com/?frompersonalbloghome" target=_blank>娱乐中心</A> 
    </LI>
    <LI>
    <DIV class="line brd01"></DIV></LI>
    <LI><A href="http://blog.163.com/findFriend.do?type=5?frompersonalbloghome" 
    target=_blank>找 朋 友</A> </LI>
    <LI><A href="http://blog.163.com/clone/clone.html?frompersonalbloghome" 
    target=_blank>博客复制</A> </LI>
    <LI><A href="http://blog.163.com/services/wapblog.html?frompersonalbloghome" 
    target=_blank>手机博客</A> </LI>
    <LI><A href="http://blog.163.com/services/emsblog.html?frompersonalbloghome" 
    target=_blank>短信写博</A> </LI>
    <LI>
    <DIV class="line brd01"></DIV></LI>
    <LI><A href="http://feedback.163.com/fb/add/?productId=1" 
    target=_blank>意见反馈</A> </LI>
    <LI>
    <DIV class="line brd01"></DIV></LI>
    <LI style="BACKGROUND-IMAGE: none"><A 
    href="http://blog.163.com/services/all.html?frompersonalbloghome">更多&gt;&gt;</A> 
    </LI></OL></LI></UL>
<FORM id=rmndtplfm action=/search method=get><INPUT class=bd01 id=rmndtplin 
disabled name=q><INPUT type=hidden value=blog name=t> <A class=bd01 id=rmndtplsr 
href="http://blog.163.com/search?frompersonalsearch" target=_blank>搜 
索</A></FORM></DIV>
<DIV class="g_menu_rlk sep" id=_$$_TopBarRight></DIV></DIV>
<DIV class="bgtt wsy">
<DIV class="bg10 wsy" id=_$$_Top_Outer>
<DIV class="bg11 ht wkg" id=_$$_Top_Inner>
<DIV class="flash ht" id=_$$_Top_Flash></DIV>
<DIV class=logo 
onclick="window.location.href='http://blog.163.com/login.html';return false;"></DIV>
<DIV class=title id=_$$_Top_Title></DIV></DIV></DIV>
<DIV class="bg20 wsy">
<DIV class="bg21 hn c02 wkg advnav">
<DIV class="wnl hn"></DIV>
<DIV class="wnr hn"></DIV>
<DIV class="wnc hn" style="Z-INDEX: 100; POSITION: relative">
<DIV class="hn g_menu_nv">
<DIV class="hn item "><A hideFocus onclick="" 
href="http://41620935.blog.163.com/">首页</A> </DIV>
<DIV class="hn item seltag"><A hideFocus onclick="" 
href="http://41620935.blog.163.com/blog/">日志</A> </DIV>
<DIV class="hn item "><A hideFocus onclick="" 
href="http://41620935.blog.163.com/album/">相册</A> </DIV>
<DIV class="hn item "><A hideFocus onclick="" 
href="http://41620935.blog.163.com/music/">音乐</A> </DIV>
<DIV class="hn item "><A hideFocus onclick="" 
href="http://41620935.blog.163.com/collection/">收藏</A> </DIV>
<DIV class="hn item "><A hideFocus onclick="" 
href="http://41620935.blog.163.com/friends/">博友</A> </DIV>
<DIV class="hn item "><A hideFocus onclick="" 
href="http://41620935.blog.163.com/profile/">关于我</A> 
</DIV></DIV></DIV></DIV></DIV>
<DIV class="bgtf wsy">
<DIV class="bgtf_ hz wkg">
<DIV class="wzl hz"></DIV>
<DIV class="wzr hz"></DIV>
<DIV class="wzc hz"></DIV></DIV></DIV>
<DIV class="bgmt wsy">
<DIV class="bgmt_ hy wkg">
<DIV class="wyl hy"></DIV>
<DIV class="wyr hy"></DIV>
<DIV class="wyc hy"></DIV></DIV></DIV>
<DIV class="bg40 wsy">
<DIV class="bg41 wkg g_p_hide" id=_$$_module_container>
<DIV class="wml bgml g_p_fill"></DIV>
<DIV class="wmr bgmr g_p_fill"></DIV>
<DIV class="wml mtl"></DIV>
<DIV class="wml mbl"></DIV>
<DIV class="wmr mtr"></DIV>
<DIV class="wmr mbr"></DIV>
<DIV class=wmc>
<DIV class="css_inr_1 innerLayout" id=layout_ctrl>
<DIV class="wql hm" id=_$$_module_container_left index="0"></DIV>
<DIV class="wqc hm" index="1"><!-- 封禁的提示 -->
<DIV id=_$_prohibit_user_content 
style="BORDER-RIGHT: #aaaaaa 1px solid; BORDER-TOP: #aaaaaa 1px solid; DISPLAY: none; MARGIN: 10px 10px 10px 150px; BORDER-LEFT: #aaaaaa 1px solid; WIDTH: 610px; BORDER-BOTTOM: #aaaaaa 1px solid; HEIGHT: 60px; BACKGROUND-COLOR: #ffffdc">
<DIV style="MARGIN: 10px 0px 0px 10px; TEXT-ALIGN: left"><IMG 
style="FLOAT: left; MARGIN: 0px 10px 0px 20px" 
src="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/exclamation.gif"> 
<SPAN 
style="COLOR: #575757; LINE-HEIGHT: 20px">很抱歉，因为您在网易相册发布了违规信息，账号被屏蔽。被屏蔽期间他人无法访问您的相册。<BR>去<A 
style="COLOR: #0000ff; LINE-HEIGHT: 20px; TEXT-DECORATION: underline" 
href="http://help.163.com/07/0129/11/360I4UJQ007525K2.html" 
target=_blank>帮助中心</A>，了解如何重新恢复服务。</SPAN></DIV></DIV>
<DIV id=_$$_module_container_center></DIV></DIV>
<DIV class="wqr hm" id=_$$_module_container_right index="2"></DIV>
<DIV class=g_p_clear></DIV></DIV></DIV></DIV></DIV>
<DIV class="bgmf wsy">
<DIV class="bgmf_ hx wkg">
<DIV class="wxl hx"></DIV>
<DIV class="wxr hx"></DIV>
<DIV class="wxc hx"></DIV></DIV></DIV>
<DIV class="bg50 wsy">
<DIV class="bg51 hf wkg c10">
<DIV class="g_menu_bt fmgtp"><A href="http://corp.163.com/index_gb.html" 
target=_blank>公司简介</A><SPAN>-</SPAN> <A 
href="http://gb.corp.163.com/gb/contactus.html" 
target=_blank>联系方法</A><SPAN>-</SPAN> <A 
href="http://corp.163.com/gb/job/job.html" target=_blank>招聘信息</A><SPAN>-</SPAN> 
<A href="http://help.163.com/?b13abk1" target=_blank>客户服务</A><SPAN>-</SPAN> <A 
href="http://corp.163.com/gb/legal/legal.html" 
target=_blank>相关法律</A><SPAN>-</SPAN> <A 
href="http://jz.163.com/">互动营销</A><SPAN>-</SPAN> <LINK title=RSS 
href="http://41620935.blog.163.com/rss/" type=application/rss+xml 
rel=alternate><A class="p_ p0" href="http://41620935.blog.163.com/rss/" 
target=_blank>&nbsp;</A> </DIV>
<DIV>网易公司版权所有 &copy;1997-2009</DIV></DIV></DIV></DIV></DIV>
<DIV id=_$$_outer_layer></DIV>
<DIV class=g_p_none><INPUT id=$_oppoPageUrlForLogin type=hidden 
value=/blog/static/498206420082185032531/edit/> </DIV>
<SCRIPT language=JavaScript>     
  	function initUD(){
       UD.body=$("_$$_inner_layer");
       UD.layer=$("_$$_outer_layer");
       UD.window=$("blog-163-com-body");
       UD.bar=$("theme_selector_pointer");
     }
  </SCRIPT>

<SCRIPT language=JavaScript>
// <![CDATA[
     var g_urlPrefix="";
     function g_initCommon(){
         var _arr = ["rmdtpxt","rmdtplgn"];
         for (var i=_arr.length-1;i>=0;i--){
              _o = $(_arr[i]);
              if(i==0)_o && (_o.onclick=function(){exitAfterLogged();return false;});
              else if(i==1)_o && (_o.onclick=function(){showLoginDlg('41620935.blog.163.com');return false;});
         }
         topFromUrsLogin();
     } 
	function g_initUtil(){
		TopSearch.init();
	}
// ]]>
</SCRIPT>

<STYLE type=text/css>#messageZone {
	PADDING-RIGHT: 4px; PADDING-LEFT: 4px; FONT-SIZE: 12px; RIGHT: 20px; BACKGROUND: #ffffae; PADDING-BOTTOM: 4px; WIDTH: 100px; PADDING-TOP: 4px; FONT-FAMILY: Arial,Helvetica,sans-serif; POSITION: absolute; TOP: 0px
}
</STYLE>

<SCRIPT 
src="[转]STL中的常用的vector，map，set，Sort用法 - ZhengHangJie的日志 - 网易博客.files/InfoAlertPad.js" 
type=text/javascript></SCRIPT>

<SCRIPT language=javascript>  
  function initAll(){
  	try{  		
  		initUD();
  		g_initCommon();
  		initFlash(1);  		
		  showPageTopBar({serverName:'41620935.blog.163.com',serverHostName:'blog.163.com'});
		initPage();
  		window.setTimeout("g_initUtil();",3000);
  		
  		//顶部博客子菜单的显示
  		Event.observe(document.body,'click',hideBlogItems);
  		
  		//主题风格需要做的事情
  		if(typeof _$$_initFixedTheme == 'function'){
  			_$$_initFixedTheme(4086);
  		}
 	 }catch(e){}
  }
  initAll();
  </SCRIPT>

<SCRIPT language=JavaScript>
			function onVisitorInfoLoad(_p){	
				var _s = $('visitorInfoJs').readyState;
				if (_p && _s!='loaded'&&_s!='complete') return;
				
				gLoadPermaLink(1, 'prev', 'fks_084065085084080068083094086095080095089065084080082', 20, -100, 
					'[转]STL中的常用的vector，map，set，Sort用法', 'blog/static/498206420082185032531', '498206420082185032531', 'http://q.163.com', 
					0, 1,	'off', '0'
);
					
				topFromUrsLogin();
			}		
		  			  			  	
	  		var ver = new Date().getTime();
	  		var setNone163Cookie = getUrlParam("setNone163Cookie");
	  		var setCookieStr = ""
	  		if(setNone163Cookie)
	  		   setCookieStr = "&setNone163Cookie="+setNone163Cookie;
	  		document.write('<script type="text/javascript" onreadystatechange="onVisitorInfoLoad(true);" onload="onVisitorInfoLoad();" id="visitorInfoJs" src="http://blog.163.com/js/static/visitorInfo.js?host=41620935&mode=prev&channel=blog&blogId=fks_084065085084080068083094086095080095089065084080082&pubTime=1205830832531&v=' + ver + setCookieStr+'"></'+'script>');
  	</SCRIPT>
</BODY></HTML>
